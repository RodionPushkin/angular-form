import { Component} from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';


@Component({
  selector: 'app-root',
  template: `<div class="slider" >
    <div class="slide" [ngClass]="slide == 0 ? 'active' : ''">
      <div class="slide__header">
        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M31.9948 14.1439C31.9676 13.8835 31.8343 13.6459 31.6267 13.4878L29.0919 11.5578L30.0141 8.49902C30.0897 8.24829 30.0587 7.9774 29.9284 7.75054C29.7982 7.52375 29.5802 7.36129 29.3265 7.30173L26.2298 6.57493L25.8345 3.40343C25.8021 3.1436 25.6642 2.90877 25.4534 2.75491C25.2427 2.60087 24.9778 2.54144 24.722 2.59088L21.599 3.19298L19.9543 0.457346C19.8195 0.233256 19.5985 0.0751304 19.3437 0.0207257C19.0888 -0.033742 18.8229 0.0202231 18.6091 0.16993L15.9999 1.99676L13.3906 0.169993C13.1767 0.0203487 12.9108 -0.0336791 12.656 0.0207885C12.4012 0.0751933 12.1802 0.233256 12.0454 0.457472L10.401 3.19317L7.27799 2.59107C7.02211 2.54182 6.7573 2.60112 6.54655 2.7551C6.3358 2.90902 6.1978 3.14372 6.16549 3.40362L5.77017 6.57512L2.67342 7.30192C2.41967 7.36148 2.20186 7.52394 2.07155 7.75073C1.9413 7.97758 1.9103 8.24841 1.9858 8.49902L2.90792 11.5579L0.373299 13.4878C0.165612 13.6459 0.032362 13.8834 0.00517446 14.1439C-0.0220755 14.4043 0.059112 14.6645 0.229612 14.8626L2.30967 17.28L0.774987 20.0794C0.649237 20.3088 0.623612 20.5802 0.704112 20.8293C0.784674 21.0783 0.964112 21.2828 1.19999 21.394L4.07849 22.752L3.80917 25.9369C3.78705 26.1978 3.87342 26.4564 4.04786 26.651C4.22211 26.8456 4.46892 26.959 4.72936 26.9642L7.90874 27.0279L8.95136 30.0475C9.03674 30.2949 9.22024 30.4958 9.45824 30.6022C9.69636 30.7089 9.96755 30.7114 10.2077 30.6098L13.138 29.3682L15.3124 31.7005C15.4906 31.8916 15.7395 32 16 32C16.2605 32 16.5094 31.8916 16.6876 31.7005L18.862 29.3682L21.7922 30.6098C22.0322 30.7114 22.3035 30.7087 22.5415 30.6022C22.7796 30.4958 22.9631 30.295 23.0485 30.0475L24.0912 27.0279L27.2705 26.9642C27.5309 26.959 27.7777 26.8456 27.952 26.651C28.1263 26.4564 28.2127 26.1979 28.1907 25.9369L27.9214 22.752L30.8 21.394C31.036 21.2828 31.2154 21.0783 31.2959 20.8292C31.3764 20.5803 31.3508 20.3087 31.225 20.0793L29.6902 17.28L31.7704 14.8625C31.9408 14.6645 32.022 14.4043 31.9948 14.1439ZM15.9999 25.064C11.0277 25.064 6.98255 20.9979 6.98255 16C6.98255 11.0021 11.0277 6.93598 15.9999 6.93598C20.9721 6.93598 25.0173 11.0021 25.0173 16C25.0173 20.9978 20.9721 25.064 15.9999 25.064Z" fill="#E20B20"></path>
          <path d="M15.9998 8.83057C12.0669 8.83057 8.86719 12.0468 8.86719 16.0001C8.86719 19.9533 12.0669 23.1695 15.9998 23.1695C19.9329 23.1695 23.1324 19.9533 23.1324 16.0001C23.1324 12.0468 19.9328 8.83057 15.9998 8.83057ZM19.6943 14.6408L15.6569 18.6991C15.4728 18.884 15.2317 18.9765 14.9905 18.9765C14.7494 18.9765 14.5082 18.884 14.3242 18.6991L12.3054 16.6699C11.9374 16.3 11.9374 15.7003 12.3054 15.3303C12.6733 14.9605 13.2701 14.9603 13.6381 15.3303L14.9905 16.6897L18.3616 13.3012C18.7296 12.9313 19.3263 12.9312 19.6944 13.3012C20.0623 13.6711 20.0623 14.2709 19.6943 14.6408Z" fill="#E20B20"></path>
        </svg>
        <h1>подать заявку</h1>
      </div>
      <img src="/assets/chelobeki.svg" alt="">
      <button class="button" (click)="slide = 1">подать заявку</button>
    </div>
    <div class="slide" [ngClass]="slide == 1 ? 'active' : ''">
      <div class="slide__header">
        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M31.9948 14.1439C31.9676 13.8835 31.8343 13.6459 31.6267 13.4878L29.0919 11.5578L30.0141 8.49902C30.0897 8.24829 30.0587 7.9774 29.9284 7.75054C29.7982 7.52375 29.5802 7.36129 29.3265 7.30173L26.2298 6.57493L25.8345 3.40343C25.8021 3.1436 25.6642 2.90877 25.4534 2.75491C25.2427 2.60087 24.9778 2.54144 24.722 2.59088L21.599 3.19298L19.9543 0.457346C19.8195 0.233256 19.5985 0.0751304 19.3437 0.0207257C19.0888 -0.033742 18.8229 0.0202231 18.6091 0.16993L15.9999 1.99676L13.3906 0.169993C13.1767 0.0203487 12.9108 -0.0336791 12.656 0.0207885C12.4012 0.0751933 12.1802 0.233256 12.0454 0.457472L10.401 3.19317L7.27799 2.59107C7.02211 2.54182 6.7573 2.60112 6.54655 2.7551C6.3358 2.90902 6.1978 3.14372 6.16549 3.40362L5.77017 6.57512L2.67342 7.30192C2.41967 7.36148 2.20186 7.52394 2.07155 7.75073C1.9413 7.97758 1.9103 8.24841 1.9858 8.49902L2.90792 11.5579L0.373299 13.4878C0.165612 13.6459 0.032362 13.8834 0.00517446 14.1439C-0.0220755 14.4043 0.059112 14.6645 0.229612 14.8626L2.30967 17.28L0.774987 20.0794C0.649237 20.3088 0.623612 20.5802 0.704112 20.8293C0.784674 21.0783 0.964112 21.2828 1.19999 21.394L4.07849 22.752L3.80917 25.9369C3.78705 26.1978 3.87342 26.4564 4.04786 26.651C4.22211 26.8456 4.46892 26.959 4.72936 26.9642L7.90874 27.0279L8.95136 30.0475C9.03674 30.2949 9.22024 30.4958 9.45824 30.6022C9.69636 30.7089 9.96755 30.7114 10.2077 30.6098L13.138 29.3682L15.3124 31.7005C15.4906 31.8916 15.7395 32 16 32C16.2605 32 16.5094 31.8916 16.6876 31.7005L18.862 29.3682L21.7922 30.6098C22.0322 30.7114 22.3035 30.7087 22.5415 30.6022C22.7796 30.4958 22.9631 30.295 23.0485 30.0475L24.0912 27.0279L27.2705 26.9642C27.5309 26.959 27.7777 26.8456 27.952 26.651C28.1263 26.4564 28.2127 26.1979 28.1907 25.9369L27.9214 22.752L30.8 21.394C31.036 21.2828 31.2154 21.0783 31.2959 20.8292C31.3764 20.5803 31.3508 20.3087 31.225 20.0793L29.6902 17.28L31.7704 14.8625C31.9408 14.6645 32.022 14.4043 31.9948 14.1439ZM15.9999 25.064C11.0277 25.064 6.98255 20.9979 6.98255 16C6.98255 11.0021 11.0277 6.93598 15.9999 6.93598C20.9721 6.93598 25.0173 11.0021 25.0173 16C25.0173 20.9978 20.9721 25.064 15.9999 25.064Z" fill="#E20B20"></path>
          <path d="M15.9998 8.83057C12.0669 8.83057 8.86719 12.0468 8.86719 16.0001C8.86719 19.9533 12.0669 23.1695 15.9998 23.1695C19.9329 23.1695 23.1324 19.9533 23.1324 16.0001C23.1324 12.0468 19.9328 8.83057 15.9998 8.83057ZM19.6943 14.6408L15.6569 18.6991C15.4728 18.884 15.2317 18.9765 14.9905 18.9765C14.7494 18.9765 14.5082 18.884 14.3242 18.6991L12.3054 16.6699C11.9374 16.3 11.9374 15.7003 12.3054 15.3303C12.6733 14.9605 13.2701 14.9603 13.6381 15.3303L14.9905 16.6897L18.3616 13.3012C18.7296 12.9313 19.3263 12.9312 19.6944 13.3012C20.0623 13.6711 20.0623 14.2709 19.6943 14.6408Z" fill="#E20B20"></path>
        </svg>
        <h1>подать заявку</h1>
      </div>
      <div class="form">
        <p>Сумма бг</p>
        <input [(ngModel)]="amount" type="text" placeholder="сумма" (change)="changeAmount($event)">
        <p>Период в месяцах</p>
        <input [(ngModel)]="duration" type="text" placeholder="Например 1 месяц" (change)="changeDuration($event)">
        <p>Номер телефона</p>
        <input [(ngModel)]="phone" type="text" placeholder="телефон" (change)="changePhone($event)">
        <p class="precost">Одобрено <span>200 000 ₽</span></p>
      </div>
      <button class="button" (click)="sendData()">отправить</button>
    </div>
    <div class="slide" [ngClass]="slide == 2 ? 'active' : ''">
      <svg xmlns="http://www.w3.org/2000/svg" class="ionicon" viewBox="0 0 512 512">
        <path fill="none" stroke="#38b63e" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" d="M464 128L240 384l-96-96M144 384l-96-96M368 128L232 284"></path>
      </svg>
    </div>
  </div>`
})
export class AppComponent {
  slide: number = 0;
  phone: string = "";
  duration: string = "";
  amount: string = "";
  formatDuration(text : string){
    return text.replace(/\D/g, "").length >= 3 ?
      text.replace(/\D/g, "").substr(0, 3)+" месяцев" :
      text.replace(/\D/g, "").substr(0, 3)
  }
  formatPhone(text : string){
    let inputNumbersValue = text.replace(/\D/g, "")
    let formattedValue = ""
    if (inputNumbersValue == null || inputNumbersValue == "") {
      formattedValue = ""
    } else {
      if (["7", "8", "9"].indexOf(inputNumbersValue[0]) > -1) {
        if (inputNumbersValue[0] == "9") {
          formattedValue = "7" + inputNumbersValue
        }
        let firstSymbols = (inputNumbersValue[0] == "8") ? "8" : "+7"
        formattedValue = firstSymbols + " "
        if (inputNumbersValue.length > 1) {
          formattedValue += "(" + inputNumbersValue.substring(1, 4)
        }
        if (inputNumbersValue.length >= 5) {
          formattedValue += ") " + inputNumbersValue.substring(4, 7)
        }
        if (inputNumbersValue.length >= 8) {
          formattedValue += "-" + inputNumbersValue.substring(7, 9)
        }
        if (inputNumbersValue.length >= 10) {
          formattedValue += "-" + inputNumbersValue.substring(9, 11)
        }
      } else {
        formattedValue = "+" + inputNumbersValue.substring(0, 16)
      }
    }

    return formattedValue
  }
  formatAmount(text : string){
    if(text.length == 0){
      return ""
    }
    return (parseInt(text.replace(/\D/g, "").replace(/\s/g, ''))).toLocaleString('ru-Ru')
  }
  changeAmount(e: any){
    this.amount = this.formatAmount(e.target.value)
    e.target.value = this.formatAmount(e.target.value)
  }
  changeDuration(e: any){
    this.duration = this.formatDuration(e.target.value)
    e.target.value = this.formatDuration(e.target.value)
  }
  changePhone(e: any){
    this.phone = this.formatPhone(e.target.value)
    e.target.value = this.formatPhone(e.target.value)
  }
  sendData(){
    console.log("sending data...");
    this.slide = 2
    setTimeout(()=>{
      setTimeout(()=>this.slide = 0,800)
    },800)
  }
}
